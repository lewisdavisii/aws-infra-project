AWSTemplateFormatVersion: "2010-09-09"
Description: Fully working CloudFormation template with EC2, Lambda, RDS, and Auto Scaling

Parameters:
  KeyName:
    Description: EC2 Key Pair (must exist in your account)
    Type: String
    Default: newkeypair

Resources:

  WebSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow HTTP and SSH
      VpcId: vpc-018cc9ebd191b9933
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  RDSSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnets for RDS
      SubnetIds:
        - subnet-06bd3f12ae8b6597d
        - subnet-09452f8ce4db6cda0

  WebLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        InstanceType: t2.micro
        ImageId: ami-0c94855ba95c71c99
        KeyName: !Ref KeyName
        SecurityGroupIds:
          - !Ref WebSecurityGroup
        UserData:
          Fn::Base64: |
            #!/bin/bash
            echo "<h1>Hello from EC2</h1>" > /var/www/html/index.html
            yum install -y httpd
            systemctl start httpd
            systemctl enable httpd

  AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
        - subnet-06bd3f12ae8b6597d
        - subnet-09452f8ce4db6cda0
      LaunchTemplate:
        LaunchTemplateId: !Ref WebLaunchTemplate
        Version: !GetAtt WebLaunchTemplate.LatestVersionNumber
      MinSize: 1
      MaxSize: 3
      DesiredCapacity: 1
      HealthCheckType: EC2

  RDSInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBName: SampleDB
      Engine: MySQL
      MasterUsername: admin
      MasterUserPassword: Password123!
      AllocatedStorage: 20
      DBInstanceClass: db.t3.micro
      PubliclyAccessible: true
      VPCSecurityGroups:
        - !Ref WebSecurityGroup
      DBSubnetGroupName: !Ref RDSSubnetGroup

  SampleLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: SampleFunction
      Runtime: python3.9
      Handler: index.lambda_handler
      Role: arn:aws:iam::638559983556:role/LambdaBasicExecutionRole
      Code:
        ZipFile: |
          def lambda_handler(event, context):
              return {"statusCode": 200, "body": "Hello from Lambda!"}
